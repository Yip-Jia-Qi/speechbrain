d# Generated 2023-11-28 from:
# /home/users/ntu/jiaqi006/code/speechbrain/recipes/WSJ0Mix/separation/hparams/cdf_new_trf_L3nq.yaml
# yamllint disable
# ################################
# Model: SepFormer for source separation
# https://arxiv.org/abs/2010.13154
# Dataset : WSJ0-2mix and WSJ0-3mix
# ################################
#
# Basic parameters
# Seed needs to be set at top of yaml, before objects with parameters are made
#
seed: 1234
__set_seed: !apply:torch.manual_seed [1234]

# Data params

# e.g. '/yourpath/wsj0-mix/2speakers'
# end with 2speakers for wsj0-2mix or 3speakers for wsj0-3mix
data_folder: /scratch/jiaqi006/others/wsj0-2mix/2speakers

# the path for wsj0/si_tr_s/ folder -- only needed if dynamic mixing is used
# e.g. /yourpath/wsj0-processed/si_tr_s/
# you need to convert the original wsj0 to 8k
# you can do this conversion with the script ../meta/preprocess_dynamic_mixing.py
base_folder_dm: /yourpath/wsj0-processed/si_tr_s/

experiment_name: codecformer/encodec_amuse_L4nq_3
output_folder: !ref results/<experiment_name>/<seed>
train_log: !ref <output_folder>/train_log.txt
save_folder: !ref <output_folder>/save
train_data: !ref <save_folder>/wsj_tr.csv
valid_data: !ref <save_folder>/wsj_cv.csv
test_data: !ref <save_folder>/wsj_tt.csv
skip_prep: false


# Experiment params
auto_mix_prec: false # Set it to True for mixed precision
test_only: false
num_spks: 2 # set to 3 for wsj0-3mix
noprogressbar: false
save_audio: true # Save estimated sources on disk
n_audio_to_save: 20
sample_rate: 8000
quantize_before: false
quantize_after: false

# Training parameters
N_epochs: 20
batch_size: 3 #3
lr: 0.00015 #0.003
clip_grad_norm: 5
loss_upper_lim: 999999  # this is the upper limit for an acceptable loss
# if True, the training sequences are cut to a specified length
limit_training_signal_len: false
# this is the length of sequences if we choose to limit
# the signal length of training sequences
training_signal_len: 40000

# Set it to True to dynamically create mixtures at training time
dynamic_mixing: false

# Parameters for data augmentation
use_wavedrop: false
use_speedperturb: true
use_rand_shift: false
min_shift: -8000
max_shift: 8000

# Speed perturbation
speed_changes: [95, 100, 105]  # List of speed changes for time-stretching

speed_perturb: !new:speechbrain.augment.time_domain.SpeedPerturb
    orig_freq: !ref <sample_rate>
    speeds: !ref <speed_changes>

# Frequency drop: randomly drops a number of frequency bands to zero.
drop_freq_low: 0  # Min frequency band dropout probability
drop_freq_high: 1  # Max frequency band dropout probability
drop_freq_count_low: 1  # Min number of frequency bands to drop
drop_freq_count_high: 3  # Max number of frequency bands to drop
drop_freq_width: 0.05  # Width of frequency bands to drop

drop_freq: !new:speechbrain.augment.time_domain.DropFreq
    drop_freq_low: !ref <drop_freq_low>
    drop_freq_high: !ref <drop_freq_high>
    drop_freq_count_low: !ref <drop_freq_count_low>
    drop_freq_count_high: !ref <drop_freq_count_high>
    drop_freq_width: !ref <drop_freq_width>

# Time drop: randomly drops a number of temporal chunks.
drop_chunk_count_low: 1  # Min number of audio chunks to drop
drop_chunk_count_high: 5  # Max number of audio chunks to drop
drop_chunk_length_low: 1000  # Min length of audio chunks to drop
drop_chunk_length_high: 2000  # Max length of audio chunks to drop

drop_chunk: !new:speechbrain.augment.time_domain.DropChunk
    drop_length_low: !ref <drop_chunk_length_low>
    drop_length_high: !ref <drop_chunk_length_high>
    drop_count_low: !ref <drop_chunk_count_low>
    drop_count_high: !ref <drop_chunk_count_high>

# loss thresholding -- this thresholds the training loss
threshold_byloss: True
threshold: -30



# Dataloader options
# Set num_workers: 0 on MacOS due to behavior of the multiprocessing library
dataloader_opts:
  batch_size: !ref <batch_size>
  num_workers: 3

test_dataloader_opts:
  batch_size: 1
  num_workers: 3

# Specifying the network

# Encoder parameters
codec_channels: 512
block_channels: 256 #1024 #256

# block: !new:speechbrain.lobes.models.passblock.PassBlock
block: !new:speechbrain.lobes.models.dual_path.SBTransformerBlock
  num_layers: 16  #16
  d_model: 256
  nhead: 8  #1/8
  d_ffn: 1024             #2048?
  dropout: 0.1  #0.0/0.1/0.5
  use_positional_encoding: true
  norm_before: true

# block: !new:speechbrain.lobes.models.dual_path.SBRNNBlock
#     num_layers: 1
#     input_size: !ref <block_channels>
#     hidden_channels: !ref <block_channels>
#     dropout: 0
#     bidirectional: False

dacmodel: !new:speechbrain.lobes.models.codecformer3_espnet_encodec.DACWrapper
  input_sample_rate: 8000
  DAC_model_path: /home/jiaqi006/.cache/huggingface/hub/models--espnet--amuse_encodec_16k/snapshots/b463df599feabc22d74af80392f16a62d13e186b/exp_16k/codec_train_encodec_fs16000_raw_fs16000
  DAC_sample_rate: 16000
  Freeze: true
  
sepmodel: !new:speechbrain.lobes.models.codecformer3_espnet_encodec.simpleSeparator2
        # dacmodel: !ref <dacmodel>
  num_spks: 2
  channels: !ref <codec_channels>
  block: !ref <block>
  block_channels: 256
  activation: "ELU"
  activation_params:
    alpha: 1.0

# sepmodel: !new:speechbrain.lobes.models.codecformer3.simpleUNetSeparator
#     num_spks: !ref <num_spks> 
#     channels: !ref <channels>
#     block: !ref <dprnnblock>

optimizer: !name:torch.optim.Adam
  lr: !ref <lr>
  weight_decay: 0

#Loss parameters
loss: !name:speechbrain.nnet.losses.get_si_snr_with_pitwrapper
# sisnr_loss: !name:speechbrain.nnet.losses.cal_si_snr
# sdac_loss_factor: 0.00001 
# L1_loss: !name:speechbrain.nnet.losses.get_L1_with_pitwrapper

lr_scheduler: !new:speechbrain.nnet.schedulers.ReduceLROnPlateau

  factor: 0.5
  patience: 2
  dont_halve_until_epoch: 5

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
  limit: !ref <N_epochs>

modules:
  sepmodel: !ref <sepmodel>
checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: !ref <save_folder>
  recoverables:
    sepmodel: !ref <sepmodel>
    counter: !ref <epoch_counter>
    lr_scheduler: !ref <lr_scheduler>
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: !ref <train_log>
